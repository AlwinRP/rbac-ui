{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Fetch permissions\nexport const fetchPermissions = async () => {\n  const response = await fetch(`${API_URL}/permissions`);\n  if (!response.ok) throw new Error('Failed to fetch permissions');\n  return response.json();\n};\n\n// Fetch roles\nexport const fetchRoles = async () => {\n  const response = await fetch(`${API_URL}/roles`);\n  if (!response.ok) throw new Error('Failed to fetch roles');\n  return response.json();\n};\n\n// Fetch users\nexport const fetchUsers = async () => {\n  const response = await fetch(`${API_URL}/users/`);\n  if (!response.ok) throw new Error('Failed to fetch users');\n  return response.json();\n};\n//Fetch role by id\nexport const fetchRoleById = async roleId => {\n  const response = await fetch(`${API_URL}/roles/${roleId}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch role by ID');\n  }\n  return response.json();\n};\n\n// Create a new user\nexport const createUser = async user => {\n  const response = await fetch(`${API_URL}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  const responseData = await response.json();\n  console.log('Response from server:', responseData); // Log response data\n  if (!response.ok) throw new Error('Failed to create user');\n  return responseData;\n};\n\n// Update a user by ID\nexport const updateUser = async (id, user) => {\n  const response = await fetch(`${API_URL}/users/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  const responseData = await response.json();\n  if (!response.ok) throw new Error(responseData.error || 'Failed to update user');\n  return responseData;\n};\n\n// Delete a user by ID\nexport const deleteUser = async id => {\n  const response = await fetch(`${API_URL}/users/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error('Failed to delete user');\n  return response.json();\n};\n\n// Create a new role\nexport const createRole = async role => {\n  const response = await fetch(`${API_URL}/roles`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(role)\n  });\n  const responseData = await response.json();\n  console.log('Response from server:', responseData); // Log response data\n  if (!response.ok) throw new Error(responseData.error || 'Failed to update user');\n  return responseData;\n};\n\n// Update a role by ID\nexport const updateRole = async (id, updates) => {\n  const response = await fetch(`${API_URL}/roles/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updates)\n  });\n  if (!response.ok) throw new Error('Failed to update role');\n  return response.json();\n};\n\n// Delete a role by ID\nexport const deleteRole = async id => {\n  const response = await fetch(`${API_URL}/roles/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error('Failed to delete role');\n  return response.json();\n};\n\n// Create a new permission\nexport const createPermission = async permission => {\n  const response = await fetch(`${API_URL}/permissions`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(permission)\n  });\n  if (!response.ok) throw new Error('Failed to create permission');\n  return response.json();\n};\n\n// Update a permission by ID\nexport const updatePermission = async (id, updates) => {\n  const response = await fetch(`${API_URL}/permissions/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updates)\n  });\n  if (!response.ok) throw new Error('Failed to update permission');\n  return response.json();\n};\n\n// Delete a permission by ID\nexport const deletePermission = async id => {\n  const response = await fetch(`${API_URL}/permissions/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error('Failed to delete permission');\n  return response.json();\n};\n\n// Fetch active sessions\nexport const fetchActiveSessions = async () => {\n  const response = await fetch(`${API_URL}/users/active-sessions`);\n  if (!response.ok) throw new Error('Failed to fetch active sessions');\n  return response.json();\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchPermissions","response","fetch","ok","Error","json","fetchRoles","fetchUsers","fetchRoleById","roleId","createUser","user","method","headers","body","JSON","stringify","responseData","console","log","updateUser","id","error","deleteUser","createRole","role","updateRole","updates","deleteRole","createPermission","permission","updatePermission","deletePermission","fetchActiveSessions"],"sources":["C:/Users/Lenovo/Desktop/webapp/rbac/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// Fetch permissions\r\nexport const fetchPermissions = async () => {\r\n    const response = await fetch(`${API_URL}/permissions`);\r\n    if (!response.ok) throw new Error('Failed to fetch permissions');\r\n    return response.json();\r\n};\r\n\r\n// Fetch roles\r\nexport const fetchRoles = async () => {\r\n    const response = await fetch(`${API_URL}/roles`);\r\n    if (!response.ok) throw new Error('Failed to fetch roles');\r\n    return response.json();\r\n};\r\n\r\n// Fetch users\r\nexport const fetchUsers = async () => {\r\n    const response = await fetch(`${API_URL}/users/`);\r\n    if (!response.ok) throw new Error('Failed to fetch users');\r\n    return response.json();\r\n};\r\n//Fetch role by id\r\nexport const fetchRoleById = async (roleId) => { \r\n    const response = await fetch(`${API_URL}/roles/${roleId}`); \r\n    if (!response.ok) { throw new Error('Failed to fetch role by ID'); \r\n\r\n    } return response.json();\r\n};\r\n\r\n// Create a new user\r\nexport const createUser = async (user) => {\r\n    const response = await fetch(`${API_URL}/users`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    });\r\n    const responseData = await response.json();\r\n    console.log('Response from server:', responseData); // Log response data\r\n    if (!response.ok) throw new Error('Failed to create user');\r\n    return responseData;\r\n};\r\n\r\n// Update a user by ID\r\nexport const updateUser = async (id, user) => {\r\n    const response = await fetch(`${API_URL}/users/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    });\r\n    const responseData = await response.json();\r\n    if (!response.ok) throw new Error(responseData.error || 'Failed to update user');\r\n    return responseData;\r\n};\r\n\r\n// Delete a user by ID\r\nexport const deleteUser = async (id) => {\r\n    const response = await fetch(`${API_URL}/users/${id}`, {\r\n        method: 'DELETE',\r\n    });\r\n    if (!response.ok) throw new Error('Failed to delete user');\r\n    return response.json();\r\n};\r\n\r\n// Create a new role\r\nexport const createRole = async (role) => {\r\n    const response = await fetch(`${API_URL}/roles`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(role),\r\n    });\r\n    const responseData = await response.json();\r\n    console.log('Response from server:', responseData); // Log response data\r\n    if (!response.ok) throw new Error(responseData.error || 'Failed to update user');\r\n    return responseData;\r\n};\r\n\r\n// Update a role by ID\r\nexport const updateRole = async (id, updates) => {\r\n    const response = await fetch(`${API_URL}/roles/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updates),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to update role');\r\n    return response.json();\r\n};\r\n\r\n// Delete a role by ID\r\nexport const deleteRole = async (id) => {\r\n    const response = await fetch(`${API_URL}/roles/${id}`, {\r\n        method: 'DELETE',\r\n    });\r\n    if (!response.ok) throw new Error('Failed to delete role');\r\n    return response.json();\r\n};\r\n\r\n// Create a new permission\r\nexport const createPermission = async (permission) => {\r\n    const response = await fetch(`${API_URL}/permissions`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(permission),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to create permission');\r\n    return response.json();\r\n};\r\n\r\n// Update a permission by ID\r\nexport const updatePermission = async (id, updates) => {\r\n    const response = await fetch(`${API_URL}/permissions/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updates),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to update permission');\r\n    return response.json();\r\n};\r\n\r\n// Delete a permission by ID\r\nexport const deletePermission = async (id) => {\r\n    const response = await fetch(`${API_URL}/permissions/${id}`, {\r\n        method: 'DELETE',\r\n    });\r\n    if (!response.ok) throw new Error('Failed to delete permission');\r\n    return response.json();\r\n};\r\n\r\n// Fetch active sessions\r\nexport const fetchActiveSessions = async () => {\r\n    const response = await fetch(`${API_URL}/users/active-sessions`);\r\n    if (!response.ok) throw new Error('Failed to fetch active sessions');\r\n    return response.json();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}